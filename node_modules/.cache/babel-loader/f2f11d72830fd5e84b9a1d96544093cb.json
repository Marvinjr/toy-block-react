{"ast":null,"code":"var _jsxFileName = \"/Users/marvin/Desktop/fullstacklabs/challenge/toy-blocks-client-react/src/containers/Nodes.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Node from \"../components/Node\";\nimport { Typography, Box } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { useAppSelector } from \"../store/configureStore\";\nimport { checkNodesStatus, selectNodes } from \"../reducers/nodes/nodes\";\nimport { checkBlocksStatus, selectBlocks } from \"../reducers/blocks/blocks\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Nodes = () => {\n  _s();\n\n  const [expandedNodeURL, setExpandedNodeURL] = useState(null);\n  const dispatch = useDispatch();\n  const nodes = useAppSelector(selectNodes);\n  const blocks = useAppSelector(selectBlocks);\n  const [isLoadingBlock, setIsLoadingBlocks] = useState(true);\n  useEffect(() => {\n    dispatch(checkNodesStatus(nodes)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (isLoadingBlock) {\n      toast.loading(\"Loading blocks...\");\n    }\n  }, [isLoadingBlock]);\n  useEffect(() => {\n    if (nodes.length >= 2) {\n      dispatch(checkBlocksStatus(nodes));\n      setIsLoadingBlocks(false);\n    }\n\n    return () => {\n      toast.dismiss();\n    };\n  }, [dispatch, nodes]);\n\n  function toggleNodeExpanded(node) {\n    const nodeIsOnline = node.online;\n\n    if (!nodeIsOnline) {\n      toast.warning(`Node ${node.url} is offline`);\n      return;\n    }\n\n    setExpandedNodeURL(node.url === expandedNodeURL ? null : node.url);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    paddingTop: 7,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        style: {\n          color: \"#000\"\n        },\n        children: \"Nodes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), nodes.map(node => /*#__PURE__*/_jsxDEV(Node, {\n      node: node,\n      expanded: node.url === expandedNodeURL,\n      toggleNodeExpanded: toggleNodeExpanded,\n      arrayOfBlocks: blocks\n    }, node.url, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Nodes, \"uutfJ4wR8DoASj74uc1JwD06Nbo=\", false, function () {\n  return [useDispatch, useAppSelector, useAppSelector];\n});\n\n_c = Nodes;\nexport default Nodes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nodes\");","map":{"version":3,"names":["React","useState","useEffect","Node","Typography","Box","useDispatch","useAppSelector","checkNodesStatus","selectNodes","checkBlocksStatus","selectBlocks","toast","Nodes","expandedNodeURL","setExpandedNodeURL","dispatch","nodes","blocks","isLoadingBlock","setIsLoadingBlocks","loading","length","dismiss","toggleNodeExpanded","node","nodeIsOnline","online","warning","url","color","map"],"sources":["/Users/marvin/Desktop/fullstacklabs/challenge/toy-blocks-client-react/src/containers/Nodes.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Node as NodeType } from \"../types/Node\";\nimport Node from \"../components/Node\";\nimport { Typography, Box } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { useAppSelector } from \"../store/configureStore\";\nimport { checkNodesStatus, selectNodes } from \"../reducers/nodes/nodes\";\nimport { checkBlocksStatus, selectBlocks } from \"../reducers/blocks/blocks\";\nimport { toast } from \"react-toastify\";\n\nexport const Nodes: React.FC = () => {\n  const [expandedNodeURL, setExpandedNodeURL] = useState<null | string>(null);\n  const dispatch = useDispatch();\n  const nodes = useAppSelector(selectNodes);\n  const blocks = useAppSelector(selectBlocks);\n  const [isLoadingBlock, setIsLoadingBlocks] = useState(true);\n\n  useEffect(() => {\n    dispatch(checkNodesStatus(nodes));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (isLoadingBlock) {\n      toast.loading(\"Loading blocks...\");\n    }\n  }, [isLoadingBlock]);\n\n  useEffect(() => {\n    if (nodes.length >= 2) {\n      dispatch(checkBlocksStatus(nodes));\n      setIsLoadingBlocks(false);\n    }\n    return () => {\n      toast.dismiss();\n    };\n  }, [dispatch, nodes]);\n\n  function toggleNodeExpanded(node: NodeType) {\n    const nodeIsOnline = node.online;\n\n    if (!nodeIsOnline) {\n      toast.warning(`Node ${node.url} is offline`);\n      return;\n    }\n\n    setExpandedNodeURL(node.url === expandedNodeURL ? null : node.url);\n  }\n\n  return (\n    <Box paddingTop={7}>\n      <Typography variant=\"h4\" component=\"h1\">\n        <strong style={{ color: \"#000\" }}>Nodes</strong>\n      </Typography>\n      {nodes.map((node) => (\n        <Node\n          node={node}\n          key={node.url}\n          expanded={node.url === expandedNodeURL}\n          toggleNodeExpanded={toggleNodeExpanded}\n          arrayOfBlocks={blocks}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport default Nodes;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,UAAT,EAAqBC,GAArB,QAAgC,eAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,yBAA9C;AACA,SAASC,iBAAT,EAA4BC,YAA5B,QAAgD,2BAAhD;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,OAAO,MAAMC,KAAe,GAAG,MAAM;EAAA;;EACnC,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAgB,IAAhB,CAAtD;EACA,MAAMe,QAAQ,GAAGV,WAAW,EAA5B;EACA,MAAMW,KAAK,GAAGV,cAAc,CAACE,WAAD,CAA5B;EACA,MAAMS,MAAM,GAAGX,cAAc,CAACI,YAAD,CAA7B;EACA,MAAM,CAACQ,cAAD,EAAiBC,kBAAjB,IAAuCnB,QAAQ,CAAC,IAAD,CAArD;EAEAC,SAAS,CAAC,MAAM;IACdc,QAAQ,CAACR,gBAAgB,CAACS,KAAD,CAAjB,CAAR,CADc,CAEd;EACD,CAHQ,EAGN,EAHM,CAAT;EAKAf,SAAS,CAAC,MAAM;IACd,IAAIiB,cAAJ,EAAoB;MAClBP,KAAK,CAACS,OAAN,CAAc,mBAAd;IACD;EACF,CAJQ,EAIN,CAACF,cAAD,CAJM,CAAT;EAMAjB,SAAS,CAAC,MAAM;IACd,IAAIe,KAAK,CAACK,MAAN,IAAgB,CAApB,EAAuB;MACrBN,QAAQ,CAACN,iBAAiB,CAACO,KAAD,CAAlB,CAAR;MACAG,kBAAkB,CAAC,KAAD,CAAlB;IACD;;IACD,OAAO,MAAM;MACXR,KAAK,CAACW,OAAN;IACD,CAFD;EAGD,CARQ,EAQN,CAACP,QAAD,EAAWC,KAAX,CARM,CAAT;;EAUA,SAASO,kBAAT,CAA4BC,IAA5B,EAA4C;IAC1C,MAAMC,YAAY,GAAGD,IAAI,CAACE,MAA1B;;IAEA,IAAI,CAACD,YAAL,EAAmB;MACjBd,KAAK,CAACgB,OAAN,CAAe,QAAOH,IAAI,CAACI,GAAI,aAA/B;MACA;IACD;;IAEDd,kBAAkB,CAACU,IAAI,CAACI,GAAL,KAAaf,eAAb,GAA+B,IAA/B,GAAsCW,IAAI,CAACI,GAA5C,CAAlB;EACD;;EAED,oBACE,QAAC,GAAD;IAAK,UAAU,EAAE,CAAjB;IAAA,wBACE,QAAC,UAAD;MAAY,OAAO,EAAC,IAApB;MAAyB,SAAS,EAAC,IAAnC;MAAA,uBACE;QAAQ,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAT,CAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,EAIGb,KAAK,CAACc,GAAN,CAAWN,IAAD,iBACT,QAAC,IAAD;MACE,IAAI,EAAEA,IADR;MAGE,QAAQ,EAAEA,IAAI,CAACI,GAAL,KAAaf,eAHzB;MAIE,kBAAkB,EAAEU,kBAJtB;MAKE,aAAa,EAAEN;IALjB,GAEOO,IAAI,CAACI,GAFZ;MAAA;MAAA;MAAA;IAAA,QADD,CAJH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CAvDM;;GAAMhB,K;UAEMP,W,EACHC,c,EACCA,c;;;KAJJM,K;AAyDb,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}