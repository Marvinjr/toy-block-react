{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport initialState from \"./initialState\";\nimport fetch from \"cross-fetch\";\nexport const checkNodeStatus = createAsyncThunk(\"nodes/checkNodeStatus\", async node => {\n  const response = await fetch(`${node.url}/api/v1/status`);\n  const data = await response.json();\n  return data;\n});\nexport const checkNodesStatus = createAsyncThunk(\"nodes/checkNodesStatus\", async (nodes, thunkAPI) => {\n  const {\n    dispatch\n  } = thunkAPI;\n  nodes.forEach(node => {\n    dispatch(checkNodeStatus(node));\n  });\n});\nexport const nodesSlice = createSlice({\n  name: \"nodes\",\n  initialState: initialState().nodes,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(checkNodeStatus.pending, (state, action) => {\n      const node = state.list.find(n => n.url === action.meta.arg.url);\n      if (node) node.loading = true;\n    });\n    builder.addCase(checkNodeStatus.fulfilled, (state, action) => {\n      const node = state.list.find(n => n.url === action.meta.arg.url);\n\n      if (node) {\n        node.online = true;\n        node.loading = false;\n        node.name = action.payload.node_name;\n      }\n    });\n    builder.addCase(checkNodeStatus.rejected, (state, action) => {\n      const node = state.list.find(n => n.url === action.meta.arg.url);\n\n      if (node) {\n        node.online = false;\n        node.loading = false;\n      }\n    });\n  }\n});\nexport const selectNodes = state => state.nodes.list;\nexport default nodesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","fetch","checkNodeStatus","node","response","url","data","json","checkNodesStatus","nodes","thunkAPI","dispatch","forEach","nodesSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","list","find","n","meta","arg","loading","fulfilled","online","payload","node_name","rejected","selectNodes","reducer"],"sources":["/Users/marvin/Desktop/fullstacklabs/challenge/toy-blocks-client-react/src/reducers/nodes.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport initialState from \"./initialState\";\nimport { Node } from \"../types/Node\";\nimport { RootState } from \"../store/configureStore\";\nimport fetch from \"cross-fetch\";\n\nexport interface NodesState {\n  list: Node[];\n}\n\nexport const checkNodeStatus = createAsyncThunk(\n  \"nodes/checkNodeStatus\",\n  async (node: Node) => {\n    const response = await fetch(`${node.url}/api/v1/status`);\n    const data: { node_name: string } = await response.json();\n    return data;\n  }\n);\n\nexport const checkNodesStatus = createAsyncThunk(\n  \"nodes/checkNodesStatus\",\n  async (nodes: Node[], thunkAPI) => {\n    const { dispatch } = thunkAPI;\n    nodes.forEach((node) => {\n      dispatch(checkNodeStatus(node));\n    });\n  }\n);\n\nexport const nodesSlice = createSlice({\n  name: \"nodes\",\n  initialState: initialState().nodes as NodesState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(checkNodeStatus.pending, (state, action) => {\n      const node = state.list.find((n) => n.url === action.meta.arg.url);\n      if (node) node.loading = true;\n    });\n    builder.addCase(checkNodeStatus.fulfilled, (state, action) => {\n      const node = state.list.find((n) => n.url === action.meta.arg.url);\n      if (node) {\n        node.online = true;\n        node.loading = false;\n        node.name = action.payload.node_name;\n      }\n    });\n    builder.addCase(checkNodeStatus.rejected, (state, action) => {\n      const node = state.list.find((n) => n.url === action.meta.arg.url);\n      if (node) {\n        node.online = false;\n        node.loading = false;\n      }\n    });\n  },\n});\n\nexport const selectNodes = (state: RootState) => state.nodes.list;\nexport default nodesSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAGA,OAAOC,KAAP,MAAkB,aAAlB;AAMA,OAAO,MAAMC,eAAe,GAAGJ,gBAAgB,CAC7C,uBAD6C,EAE7C,MAAOK,IAAP,IAAsB;EACpB,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAAE,GAAEE,IAAI,CAACE,GAAI,gBAAb,CAA5B;EACA,MAAMC,IAA2B,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA1C;EACA,OAAOD,IAAP;AACD,CAN4C,CAAxC;AASP,OAAO,MAAME,gBAAgB,GAAGV,gBAAgB,CAC9C,wBAD8C,EAE9C,OAAOW,KAAP,EAAsBC,QAAtB,KAAmC;EACjC,MAAM;IAAEC;EAAF,IAAeD,QAArB;EACAD,KAAK,CAACG,OAAN,CAAeT,IAAD,IAAU;IACtBQ,QAAQ,CAACT,eAAe,CAACC,IAAD,CAAhB,CAAR;EACD,CAFD;AAGD,CAP6C,CAAzC;AAUP,OAAO,MAAMU,UAAU,GAAGd,WAAW,CAAC;EACpCe,IAAI,EAAE,OAD8B;EAEpCd,YAAY,EAAEA,YAAY,GAAGS,KAFO;EAGpCM,QAAQ,EAAE,EAH0B;EAIpCC,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CAACC,OAAR,CAAgBhB,eAAe,CAACiB,OAAhC,EAAyC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1D,MAAMlB,IAAI,GAAGiB,KAAK,CAACE,IAAN,CAAWC,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACnB,GAAF,KAAUgB,MAAM,CAACI,IAAP,CAAYC,GAAZ,CAAgBrB,GAAjD,CAAb;MACA,IAAIF,IAAJ,EAAUA,IAAI,CAACwB,OAAL,GAAe,IAAf;IACX,CAHD;IAIAV,OAAO,CAACC,OAAR,CAAgBhB,eAAe,CAAC0B,SAAhC,EAA2C,CAACR,KAAD,EAAQC,MAAR,KAAmB;MAC5D,MAAMlB,IAAI,GAAGiB,KAAK,CAACE,IAAN,CAAWC,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACnB,GAAF,KAAUgB,MAAM,CAACI,IAAP,CAAYC,GAAZ,CAAgBrB,GAAjD,CAAb;;MACA,IAAIF,IAAJ,EAAU;QACRA,IAAI,CAAC0B,MAAL,GAAc,IAAd;QACA1B,IAAI,CAACwB,OAAL,GAAe,KAAf;QACAxB,IAAI,CAACW,IAAL,GAAYO,MAAM,CAACS,OAAP,CAAeC,SAA3B;MACD;IACF,CAPD;IAQAd,OAAO,CAACC,OAAR,CAAgBhB,eAAe,CAAC8B,QAAhC,EAA0C,CAACZ,KAAD,EAAQC,MAAR,KAAmB;MAC3D,MAAMlB,IAAI,GAAGiB,KAAK,CAACE,IAAN,CAAWC,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACnB,GAAF,KAAUgB,MAAM,CAACI,IAAP,CAAYC,GAAZ,CAAgBrB,GAAjD,CAAb;;MACA,IAAIF,IAAJ,EAAU;QACRA,IAAI,CAAC0B,MAAL,GAAc,KAAd;QACA1B,IAAI,CAACwB,OAAL,GAAe,KAAf;MACD;IACF,CAND;EAOD;AAxBmC,CAAD,CAA9B;AA2BP,OAAO,MAAMM,WAAW,GAAIb,KAAD,IAAsBA,KAAK,CAACX,KAAN,CAAYa,IAAtD;AACP,eAAeT,UAAU,CAACqB,OAA1B"},"metadata":{},"sourceType":"module"}